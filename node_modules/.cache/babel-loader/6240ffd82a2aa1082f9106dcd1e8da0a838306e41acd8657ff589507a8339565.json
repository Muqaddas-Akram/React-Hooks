{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muqaddas\\\\Desktop\\\\My Code\\\\Hooks-react.js\\\\Hooks-react.js\\\\src\\\\components\\\\FetchAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Loading from './github/loading';\nimport GithubUsers from \"./github/githubUsers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FetchAPI = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getUsers = async () => {\n    try {\n      const response = await fetch('https://api.github.com/users');\n      setLoading(false);\n      setUsers(await response.json());\n    } catch (error) {\n      setLoading(false);\n      console.log(\"my error is \" + error);\n    }\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GithubUsers, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(FetchAPI, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = FetchAPI;\nexport default FetchAPI;\nvar _c;\n$RefreshReg$(_c, \"FetchAPI\");","map":{"version":3,"names":["React","useState","useEffect","Loading","GithubUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchAPI","_s","users","setUsers","loading","setLoading","getUsers","response","fetch","json","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Muqaddas/Desktop/My Code/Hooks-react.js/Hooks-react.js/src/components/FetchAPI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Loading from './github/loading';\nimport GithubUsers from \"./github/githubUsers\";\n\nconst FetchAPI = () => {\n\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const getUsers = async () => {\n        try {\n            const response = await fetch('https://api.github.com/users');\n             setLoading(false);\n            setUsers(await response.json());\n        } catch (error) {\n            setLoading(false);\n            console.log(\"my error is \"+ error);\n        }\n    }\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    if (loading) {\n        return <Loading />\n    }\n\n    return (\n        <>\n            <GithubUsers users={users}/>\n        </>\n    )\n}\n\nexport default FetchAPI;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMc,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC3DH,UAAU,CAAC,KAAK,CAAC;MAClBF,QAAQ,CAAC,MAAMI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,UAAU,CAAC,KAAK,CAAC;MACjBM,OAAO,CAACC,GAAG,CAAC,cAAc,GAAEF,KAAK,CAAC;IACtC;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZa,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACT,oBAAOP,OAAA,CAACH,OAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;EAEA,oBACInB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA,CAACF,WAAW;MAACO,KAAK,EAAEA;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC9B,CAAC;AAEX,CAAC;AAAAf,EAAA,CA7BKD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}